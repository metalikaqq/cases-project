@import '@/utils/mixins.scss';
@import '@/utils/vars.scss';

.product_images {
  gap: 10px;

  @include responsive(desktop-md) {
    position: sticky;
    top: 0;
    left: 0;
    width: 60%;
    padding-top: 30px;
  }
}

.thumbnails {
  gap: 10px;
  display: flex;
  flex-wrap: nowrap;
  overflow-x: auto;
  scrollbar-width: thin;
  -webkit-overflow-scrolling: touch;
  scroll-behavior: smooth;
  height: auto;
  padding: 5px 0;

  .thumbnail {
    position: relative;
    width: 90px;
    height: 90px;
    flex-shrink: 0;
    cursor: pointer;
    user-select: none;
    border: 2px solid transparent;
    border-radius: 4px;
    transition:
      border-color 0.3s cubic-bezier(0.4, 0, 0.2, 1),
      transform 0.3s cubic-bezier(0.34, 1.56, 0.64, 1),
      box-shadow 0.3s ease;
    background-color: #f8f9fa;
    overflow: hidden;

    &:hover {
      // border-color: #007bff;
      border-color: black;
      transform: scale(1.08) translateY(-2px);
      box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);

      .image {
        transform: scale(1.15);
        filter: brightness(1.1) contrast(1.05);
      }
    }

    // &:focus {
    //   outline: 2px solid #000;
    //   outline-offset: 2px;
    // }

    &.active {
      // border-color: #007bff;
      border-color: black;
      // box-shadow: 0 0 0 1px #007bff;
      // box-shadow: 0 0 0 1px black;
      transform: scale(1.05) translateY(-1px);
      box-shadow: 0 6px 20px rgba(0, 0, 0, 0.2);

      .image {
        transform: scale(1.1);
        filter: brightness(1.05) contrast(1.02);
      }
    }

    .thumbnail_image {
      position: relative;
      width: 100%;
      height: 100%;
    }

    .thumbnail_loading {
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      width: 20px;
      height: 20px;
      border: 2px solid #f3f3f3;
      // border-top: 2px solid #007bff;
      border-radius: 50%;
      animation: spin 1s linear infinite;
      z-index: 2;
    }

    .image {
      object-fit: cover;
      transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
      animation: fadeIn 0.5s cubic-bezier(0.34, 1.56, 0.64, 1);
    }

    &:hover .image {
      transform: scale(1.1);
    }
  }

  @include responsive(desktop-md) {
    // max-height: 120px;
  }
}

.main_image {
  position: relative;
  display: flex;
  margin-bottom: 10px;
  width: 100%;
  height: 400px; // Default height for mobile
  background-color: #f8f9fa;
  border-radius: 8px;
  overflow: hidden;
  touch-action: manipulation; // Allow touch interactions for swipe gestures
  user-select: none; // Prevent text selection during swipe

  @include responsive(tablet) {
    height: 500px;
  }

  @include responsive(desktop-md) {
    margin-bottom: 20px;
    height: 600px;
  }

  &:focus {
    outline: 2px solid #000;
    outline-offset: 2px;
  }

  // Animation states for swipe
  &.animating {

    // This targets the .main_image__inner *before* its src changes (i.e., the old image)
    &.swipe_left .main_image__inner,
    &.swipe_right .main_image__inner {
      animation: fastFadeOut 0.15s ease-out forwards;
    }
  }

  &__inner {
    // This is the Next.js Image component
    object-fit: cover;
    pointer-events: none;
    width: 100%;
    height: 100%;
    opacity: 1; // Start fully visible, will be affected by animation
    // Default animation for when a new image's src is loaded into this component
    animation: fastFadeIn 0.15s ease-out;

    /* Hover effects can be problematic with swipe, ensure they are off or very subtle
    &:hover {
      transform: scale(1.02); 
    }
    */
  }
}

.image_loading {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  background-color: rgba(0, 0, 0, 0.7);
  color: white;
  padding: 8px 16px;
  border-radius: 4px;
  font-size: 14px;
  z-index: 2;
}

.no_images {
  padding: 1rem;
  text-align: center;
  color: #666;
  font-style: italic;
  background-color: #f8f9fa;
  border-radius: 4px;
}

// Animations
@keyframes spin {
  0% {
    transform: translate(-50%, -50%) rotate(0deg);
  }

  100% {
    transform: translate(-50%, -50%) rotate(360deg);
  }
}

@keyframes fastFadeOut {
  from {
    opacity: 1;
  }

  to {
    opacity: 0;
  }
}

@keyframes fastFadeIn {
  from {
    opacity: 0;
  }

  to {
    opacity: 1;
  }
}

@keyframes fadeIn {
  0% {
    opacity: 0;
    transform: scale(0.9) translateY(10px);
  }

  50% {
    opacity: 0.5;
    transform: scale(0.95) translateY(5px);
  }

  100% {
    opacity: 1;
    transform: scale(1) translateY(0);
  }
}